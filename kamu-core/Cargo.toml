[package]
name = "kamu"
version = "0.102.1"
authors = ["Sergii Mikhtoniuk <mikhtoniuk@gmail.com>"]
edition = "2021"
license-file = "../LICENSE.txt"

[lib]
doctest = false

[features]
skip_docker_tests = []

[dependencies]
dill = "~0.3"
# dill = { path = "../../dill" }
opendatafabric = { path = "../opendatafabric" }
container-runtime = { path = "../utils/container-runtime" }

# Domain
chrono = { version = "*", features = ["serde"] }
url = { version = "*", features = ["serde"] }

# Serialization
hex = "*"
serde = { version = "*", features = ["derive"] }
serde_with = "*"
serde_yaml = "*"
json = "*"

# Ingest
flate2 = "*"  # GZip decoder
fs_extra = "*"  # Copy files with progress, get directory sizes
curl = { version = "*", features = ["http2", "protocol-ftp", "static-curl", "static-ssl"] }  # TODO: reconsider static linking
curl-sys = "*"
reqwest = { version  = "*", features = ["rustls-tls", "gzip", "deflate", "stream"] }
ringbuf = "*"
tar = "*"  # Checkpoint archival
zip = "*"

# Data
arrow-digest = "*"  # Data hashing (in-house library)
datafusion = "*"  # Reading data + SQL
digest = "*"
sha3 = "*"

# Repositories
bytes = "*"
futures = "*"
async-stream = "*"
tokio = { version = "*", features=["fs"] }
tokio-stream = { version = "*" }
tokio-util = { version = "*", features=["codec", "compat", "io"] }
trust-dns-resolver = "*"  # TODO: Needed for DNSLink resolution with IPFS
rusoto_core = {version = "0.47.0", default_features = false, features=["rustls"] }  # TODO: Pinned due to https://github.com/rusoto/rusoto/issues/1980
rusoto_s3 = {version = "0.47.0", default_features = false, features=["rustls"] }  # TODO: Pinned due to https://github.com/rusoto/rusoto/issues/1980

# Utils
async-trait = "*"
async-recursion = "*"
cfg-if = "*"  # Conditional compilation
glob = "*"  # Used for glob fetch
rand = "^0.8"
regex = "*"
indoc = "*"  # Compile-time unindent
itertools = "*"
libc = "*"  # Signal names
pathdiff = "*"  # Relative paths
pin-project = "*"
thiserror = "*"  # Structured error derivations
tracing = "*"
tempfile = "*"
walkdir = "*"

[target.'cfg(unix)'.dependencies]
users = "*"  # For getting uid:gid

[dev-dependencies]
filetime = "*"
env_logger = "*"
test-log = { version = "*", features = ["trace"] }
tracing-subscriber = { version = "*", features = ["env-filter"] }

# Http file server
http = "*"
hyper = "*"
tower = { version = "*" }
tower-http = { version = "*", features = ["fs", "trace"] }
axum = { version = "*" }
