[workspace]
members = [
    # Utils
    "src/utils/container-runtime",
    "src/utils/data-utils",
    "src/utils/database-common",
    "src/utils/database-common-macros",
    "src/utils/datafusion-cli",
    "src/utils/enum-variants",
    "src/utils/event-bus",
    "src/utils/event-sourcing",
    "src/utils/event-sourcing-macros",
    "src/utils/http-common",
    "src/utils/internal-error",
    "src/utils/multiformats",
    "src/utils/random-names",
    "src/utils/repo-tools",
    "src/utils/tracing-perfetto",
    # Domain
    "src/domain/opendatafabric",
    "src/domain/accounts/domain",
    "src/domain/datasets/domain",
    "src/domain/core",
    "src/domain/task-system/domain",
    "src/domain/flow-system/domain",
    # Domain service layer
    "src/domain/accounts/services",
    "src/domain/datasets/services",
    "src/domain/task-system/services",
    "src/domain/flow-system/services",
    # Infra
    "src/infra/core",
    "src/infra/ingest-datafusion",
    ## Flow System
    "src/infra/flow-system/repo-tests",
    "src/infra/flow-system/inmem",
    "src/infra/flow-system/postgres",
    "src/infra/flow-system/sqlite",
    ## Accounts
    "src/infra/accounts/repo-tests",
    "src/infra/accounts/inmem",
    "src/infra/accounts/mysql",
    "src/infra/accounts/postgres",
    "src/infra/accounts/sqlite",
    ## Datasets
    "src/infra/datasets/inmem",
    "src/infra/datasets/postgres",
    "src/infra/datasets/sqlite",
    ## Task System
    "src/infra/task-system/repo-tests",
    "src/infra/task-system/inmem",
    "src/infra/task-system/postgres",
    "src/infra/task-system/sqlite",
    # Adapters
    "src/adapter/auth-oso",
    "src/adapter/flight-sql",
    "src/adapter/graphql",
    "src/adapter/http",
    "src/adapter/oauth",
    "src/adapter/odata",
    # Apps
    "src/app/cli",
    # E2E
    "src/e2e/app/cli/common",
    "src/e2e/app/cli/repo-tests",
    "src/e2e/app/cli/inmem",
    "src/e2e/app/cli/postgres",
    "src/e2e/app/cli/mysql",
    "src/e2e/app/cli/sqlite",
]
resolver = "2"


[workspace.dependencies]

# Apps
kamu-cli = { version = "0.189.7", path = "src/app/cli", default-features = false }

# Utils
container-runtime = { version = "0.189.7", path = "src/utils/container-runtime", default-features = false }
database-common = { version = "0.189.7", path = "src/utils/database-common", default-features = false }
database-common-macros = { version = "0.189.7", path = "src/utils/database-common-macros", default-features = false }
enum-variants = { version = "0.189.7", path = "src/utils/enum-variants", default-features = false }
event-bus = { version = "0.189.7", path = "src/utils/event-bus", default-features = false }
event-sourcing = { version = "0.189.7", path = "src/utils/event-sourcing", default-features = false }
event-sourcing-macros = { version = "0.189.7", path = "src/utils/event-sourcing-macros", default-features = false }
http-common = { version = "0.189.7", path = "src/utils/http-common", default-features = false }
internal-error = { version = "0.189.7", path = "src/utils/internal-error", default-features = false }
kamu-data-utils = { version = "0.189.7", path = "src/utils/data-utils", default-features = false }
kamu-datafusion-cli = { version = "0.189.7", path = "src/utils/datafusion-cli", default-features = false }
multiformats = { version = "0.189.7", path = "src/utils/multiformats", default-features = false }
random-names = { version = "0.189.7", path = "src/utils/random-names", default-features = false }
tracing-perfetto = { version = "0.189.7", path = "src/utils/tracing-perfetto", default-features = false }

# Domain
opendatafabric = { version = "0.189.7", path = "src/domain/opendatafabric", default-features = false }
kamu-core = { version = "0.189.7", path = "src/domain/core", default-features = false }
kamu-accounts = { version = "0.189.7", path = "src/domain/accounts/domain", default-features = false }
kamu-task-system = { version = "0.189.7", path = "src/domain/task-system/domain", default-features = false }
kamu-flow-system = { version = "0.189.7", path = "src/domain/flow-system/domain", default-features = false }
kamu-datasets = { version = "0.189.7", path = "src/domain/datasets/domain", default-features = false }

# Domain service layer
kamu-accounts-services = { version = "0.189.7", path = "src/domain/accounts/services", default-features = false }
kamu-datasets-services = { version = "0.189.7", path = "src/domain/datasets/services", default-features = false }
kamu-task-system-services = { version = "0.189.7", path = "src/domain/task-system/services", default-features = false }
kamu-flow-system-services = { version = "0.189.7", path = "src/domain/flow-system/services", default-features = false }

# Infra
kamu = { version = "0.189.7", path = "src/infra/core", default-features = false }
kamu-ingest-datafusion = { version = "0.189.7", path = "src/infra/ingest-datafusion", default-features = false }
## Flow System
kamu-flow-system-repo-tests = { version = "0.189.7", path = "src/infra/flow-system/repo-tests", default-features = false }
kamu-flow-system-inmem = { version = "0.189.7", path = "src/infra/flow-system/inmem", default-features = false }
kamu-flow-system-postgres = { version = "0.189.7", path = "src/infra/flow-system/postgres", default-features = false }
kamu-flow-system-sqlite = { version = "0.189.7", path = "src/infra/flow-system/sqlite", default-features = false }
## Accounts
kamu-accounts-inmem = { version = "0.189.7", path = "src/infra/accounts/inmem", default-features = false }
kamu-accounts-mysql = { version = "0.189.7", path = "src/infra/accounts/mysql", default-features = false }
kamu-accounts-postgres = { version = "0.189.7", path = "src/infra/accounts/postgres", default-features = false }
kamu-accounts-sqlite = { version = "0.189.7", path = "src/infra/accounts/sqlite", default-features = false }
kamu-accounts-repo-tests = { version = "0.189.7", path = "src/infra/accounts/repo-tests", default-features = false }
## Datasets
kamu-datasets-inmem = { version = "0.189.7", path = "src/infra/datasets/inmem", default-features = false }
kamu-datasets-postgres = { version = "0.189.7", path = "src/infra/datasets/postgres", default-features = false }
kamu-datasets-sqlite = { version = "0.189.7", path = "src/infra/datasets/sqlite", default-features = false }
kamu-datasets-repo-tests = { version = "0.189.7", path = "src/infra/datasets/repo-tests", default-features = false }
## Task System
kamu-task-system-inmem = { version = "0.189.7", path = "src/infra/task-system/inmem", default-features = false }
kamu-task-system-postgres = { version = "0.189.7", path = "src/infra/task-system/postgres", default-features = false }
kamu-task-system-sqlite = { version = "0.189.7", path = "src/infra/task-system/sqlite", default-features = false }
kamu-task-system-repo-tests = { version = "0.189.7", path = "src/infra/task-system/repo-tests", default-features = false }

# Adapters
kamu-adapter-auth-oso = { version = "0.189.7", path = "src/adapter/auth-oso", default-features = false }
kamu-adapter-flight-sql = { version = "0.189.7", path = "src/adapter/flight-sql", default-features = false }
kamu-adapter-graphql = { version = "0.189.7", path = "src/adapter/graphql", default-features = false }
kamu-adapter-http = { version = "0.189.7", path = "src/adapter/http", default-features = false }
kamu-adapter-odata = { version = "0.189.7", path = "src/adapter/odata", defualt-features = false }
kamu-adapter-oauth = { version = "0.189.7", path = "src/adapter/oauth", defualt-features = false }

# E2E
kamu-cli-e2e-common = { version = "0.189.7", path = "src/e2e/app/cli/common", defualt-features = false }
kamu-cli-e2e-repo-tests = { version = "0.189.7", path = "src/e2e/app/cli/repo-tests", defualt-features = false }

[workspace.package]
version = "0.189.7"
edition = "2021"
homepage = "https://github.com/kamu-data/kamu-cli"
repository = "https://github.com/kamu-data/kamu-cli"
authors = ["Kamu Data Inc. <dev@kamu.dev>"]
readme = "README.md"
license-file = "LICENSE.txt"
keywords = [
    "data",
    "collaboration",
    "etl",
    "pipeline",
    "provenance",
    "blockchain",
]
include = ["benches/*.rs", "src/**/*.rs", "Cargo.toml"]
publish = false


[workspace.lints.clippy]
# clippy::all (clippy::—Åorrectness, clippy::suspicious, clippy::style, clippy::complexity, clippy::perf)
new_without_default = "allow"
too_many_arguments = "allow"
module_inception = "allow"

# clippy::pedantic
pedantic = { level = "warn", priority = -1 }

default_trait_access = "allow"
fn_params_excessive_bools = "allow"
if_not_else = "allow"
ignored_unit_patterns = "allow"
items_after_statements = "allow"
match_wildcard_for_single_variants = "allow"
missing_errors_doc = "allow"
missing_panics_doc = "allow"
module_name_repetitions = "allow"
must_use_candidate = "allow"
needless_raw_string_hashes = "allow"
return_self_not_must_use = "allow"
similar_names = "allow"
single_match_else = "allow"
struct_excessive_bools = "allow"
struct_field_names = "allow"
too_many_lines = "allow"
unused_self = "allow"
wildcard_imports = "allow"


# clippy::cargo
cargo = { level = "warn", priority = 0 }
multiple_crate_versions = { level = "allow", priority = 1 }


[profile.dev]
# Change this to 1 for faster builds that still preserve enough info for backtraces.
# Use 2 when you need to attach a debugger.
debug = 2


# Emit the line info tables for our crates to produce useful crash reports and backtraces.
# We don't emit info for dependencies as this significantly increases binary size.
# See: https://doc.rust-lang.org/cargo/reference/profiles.html#debug
[profile.release.package]
opendatafabric = { debug = 1 }
kamu = { debug = 1 }
kamu-cli = { debug = 1 }


[profile.ci]
inherits = "dev"
# CI builds often are closer to from-scratch builds. Incremental adds an extra
# dependency-tracking overhead and significantly increases the amount of IO and
# the size of ./target, which make caching less effective
# See: https://matklad.github.io/2021/09/04/fast-rust-builds.html#CI-Workflow
incremental = false
# Line info is enough to get good backtraces in CI - we don't need the
# full debugging symbols that are only useful when attaching a debugger.
debug = "line-tables-only"


# Use this section to test or apply emergency ovverides to dependencies
# See: https://doc.rust-lang.org/cargo/reference/overriding-dependencies.html
[patch.crates-io]
# datafusion = { git = 'https://github.com/apache/datafusion.git', tag = '39.0.0-rc1' }
# datafusion-common = { git = 'https://github.com/apache/datafusion.git', tag = '39.0.0-rc1' }
# datafusion-execution = { git = 'https://github.com/apache/datafusion.git', tag = '39.0.0-rc1' }
# datafusion-expr = { git = 'https://github.com/apache/datafusion.git', tag = '39.0.0-rc1' }
datafusion-odata = { git = 'https://github.com/kamu-data/datafusion-odata.git', branch = 'axum-0.6' }
# datafusion-ethers = { git = "https://github.com/kamu-data/datafusion-ethers.git", tag = "v39.0.0" }
