{
  "db_name": "PostgreSQL",
  "query": "\n            WITH finished AS (\n                SELECT\n                    e.event_id,\n                    (e.event_payload #>> '{TaskFinished,task_outcome,Success}') IS NOT NULL AS is_success,\n                    (e.event_payload #>> '{TaskFinished,task_outcome,Failed}') IS NOT NULL AS is_failed\n                FROM flow_events e\n                JOIN flows f ON f.flow_id = e.flow_id\n                WHERE\n                    e.event_type = 'FlowEventTaskFinished'\n                    AND f.flow_type = $1\n                AND f.scope_data = $2\n            ),\n            last_success AS (\n                SELECT event_id\n                FROM finished\n                WHERE is_success\n                ORDER BY event_id DESC\n                LIMIT 1\n            )\n            SELECT COUNT(*)::bigint AS consecutive_failures\n            FROM finished\n            WHERE is_failed AND event_id > COALESCE((SELECT event_id FROM last_success), 0);\n            ",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "consecutive_failures",
        "type_info": "Int8"
      }
    ],
    "parameters": {
      "Left": [
        "Text",
        "Jsonb"
      ]
    },
    "nullable": [
      null
    ]
  },
  "hash": "2ce7441754eb506fe5a23c6ac5a03780661e1a89149e92f077a05f93407660d3"
}
