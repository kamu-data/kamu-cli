[package]
name = "kamu"
description = "Common implementations of Kamu's core domain types"
version = { workspace = true }
homepage = { workspace = true }
repository = { workspace = true }
authors = { workspace = true }
readme = { workspace = true }
license-file = { workspace = true }
keywords = { workspace = true }
include = { workspace = true }
edition = { workspace = true }
publish = { workspace = true }


[lints]
workspace = true


[lib]
doctest = false


[features]
default = []

ftp = ["dep:curl", "dep:curl-sys"]


[dependencies]
# Kamu
internal-error = { workspace = true }
container-runtime = { workspace = true }
kamu-data-utils = { workspace = true }
opendatafabric = { workspace = true }
event-bus = { workspace = true }
kamu-core = { workspace = true }
kamu-ingest-datafusion = { workspace = true }

# Serialization
flatbuffers = "23"
hex = "0.4"
serde = { version = "1", features = ["derive"] }
serde_json = "1"
serde_with = "3"
serde_yaml = "0.9"

# Ingest
# TODO: Using curl brings a lot of overhead including compiling and linking openssl
# We should replace it with reqwest + a separate FTP client or drop FTP support in favor of container-based ingest.
curl = { optional = true, version = "0.4", features = ["protocol-ftp", "static-curl", "static-ssl"] }
curl-sys = { optional = true, version = "0.4" }
flate2 = "1"  # GZip decoder
reqwest = { version = "0.11", default-features = false, features = ["rustls-tls", "stream", "gzip", "brotli", "deflate"] }
ringbuf = "0.3"
tar = "0.4"  # Checkpoint archival
zip = "0.6"

# Data
datafusion = "33"
object_store = { version = "0.7", features = ["aws"] }
digest = "0.10"
sha3 = "0.10"

# Repositories
aws-config = { version = "0.57" }
aws-sdk-s3 = { version = "0.35" }
aws-smithy-http = { version = "0.57", features = ["rt-tokio"] }
aws-smithy-types = { version = "0.57"}
aws-credential-types = { version = "0.57" }
trust-dns-resolver = "0.23"  # TODO: Needed for DNSLink resolution with IPFS
http = "0.2"

# Utils
async-recursion = "1"
async-stream = "0.3"
async-trait = "0.1"
bytes = "1"
cfg-if = "1"  # Conditional compilation
chrono = { version = "0.4", features = ["serde"] }
dashmap = "5"
dill = "0.8"
futures = "0.3"
glob = "0.3"  # Used for glob fetch
hyper = "0.14"
indoc = "2"
itertools = "0.11"
jsonwebtoken = "9"
libc = "0.2"  # Signal names
like = { version = "0.3", default-features = false }
mockall = "0.11"
pin-project = "1"
petgraph = { version = "0.6.4", default-features = false }
rand = "0.8"
regex = "1"
strum = "0.25"  # Enum from string
strum_macros = "0.25"
tempfile = "3"
thiserror = { version = "1", default-features = false }
tokio = { version = "1", default-features = false, features=["fs", "process"] }
tokio-stream = "0.1"
tokio-util = { version = "0.7", default-features = false, features=["codec", "compat", "io"] }
tracing = "0.1"
url = { version = "2", features = ["serde"] }
walkdir = "2"

# Http file server
tower = "0.4"
tower-http = { version = "0.4", features = ["fs", "trace"] }
axum = "0.6"

[target.'cfg(unix)'.dependencies]
libc = "0.2"  # For getting uid:gid


[dev-dependencies]
criterion = { version = "0.5", features = ["async_tokio"] }
env_logger = "0.10"
filetime = "0.2"
tokio = { version = "1", default-features = false, features=["rt", "macros"] }

test-group = { version = "1" }
test-log = { version = "0.2", features = ["trace"] }
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
nanoid = "0.4.0"

[[bench]]
name = "parallel_simple_transfer_protocol"
harness = false
path = "tests/benches/parallel_simple_transfer_protocol.rs"
