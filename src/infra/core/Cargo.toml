[package]
name = "kamu"
description = "Common implementations of Kamu's core domain types"
version = { workspace = true }
homepage = { workspace = true }
repository = { workspace = true }
authors = { workspace = true }
readme = { workspace = true }
license-file = { workspace = true }
keywords = { workspace = true }
include = { workspace = true }
edition = { workspace = true }
publish = { workspace = true }


[lints]
workspace = true


[lib]
doctest = false


[features]
default = []

ingest-evm = ["dep:alloy", "dep:datafusion-ethers"]
ingest-ftp = ["dep:curl", "dep:curl-sys"]
ingest-mqtt = ["dep:rumqttc"]
query-extensions-json = ["dep:datafusion-functions-json"]
testing = [
    "dep:mockall",
    "dep:oop",
    "dep:messaging-outbox",
    "kamu-core/testing",
    "odf/testing",
]


[dependencies]
# Kamu
async-utils = { workspace = true }
container-runtime = { workspace = true }
file-utils = { workspace = true }
init-on-startup = { workspace = true }
internal-error = { workspace = true }
kamu-accounts = { workspace = true }
kamu-core = { workspace = true }
kamu-datasets = { workspace = true }
kamu-ingest-datafusion = { workspace = true }
messaging-outbox = { optional = true, workspace = true }
odf = { workspace = true }
random-names = { workspace = true }
s3-utils = { workspace = true }
time-source = { workspace = true }

# Serialization
flatbuffers = "24"
hex = "0.4"
serde = { version = "1", features = ["derive"] }
serde_json = "1"
serde_with = "3"
serde_yaml = "0.9"

# Ingest
flate2 = "1" # GZip decoder
reqwest = { version = "0.12", default-features = false, features = [
    "json",
    "rustls-tls",
    "stream",
    "gzip",
    "brotli",
    "deflate",
    "json",
] }
ringbuf = "0.3"
zip = "2"

# Data
datafusion = { version = "44", default-features = false }
digest = "0.10"
object_store = { version = "0.11", features = ["aws"] }
sha3 = "0.10"

# Repositories
aws-config = { version = "1" }
aws-sdk-s3 = { version = "1" }
aws-smithy-types = { version = "1" }
aws-credential-types = { version = "1" }
hickory-resolver = "0.24"                # TODO: Needed for DNSLink resolution with IPFS
http = "1"

# Utils
async-recursion = "1"
async-stream = "0.3"
async-trait = "0.1"
bytes = "1"
cfg-if = "1" # Conditional compilation
chrono = { version = "0.4", features = ["serde"] }
dashmap = { version = "6", default-features = false }
dill = "0.11"
futures = "0.3"
glob = "0.3" # Used for glob fetch
itertools = "0.14"
libc = "0.2" # Signal names
like = { version = "0.3", default-features = false }
pin-project = "1"
rand = "0.8"
regex = "1"
tempfile = "3"
thiserror = { version = "2", default-features = false, features = ["std"] }
tokio = { version = "1", default-features = false, features = [
    "fs",
    "process",
] }
tokio-stream = "0.1"
tokio-util = { version = "0.7", default-features = false, features = [
    "codec",
    "compat",
    "io",
] }
tracing = "0.1"
url = { version = "2", features = ["serde"] }

# Http file server
tower = "0.5"
tower-http = { version = "0.6", features = ["fs", "trace"] }
axum = "0.7"

# Optional dependencies
alloy = { optional = true, version = "0.9", default-features = false, features = [
    "std",
    "provider-http",
    "provider-ws",
] }
# TODO: Using curl brings a lot of overhead including compiling and linking openssl
# We should replace it with reqwest + a separate FTP client or drop FTP support in favor of container-based ingest.
curl = { optional = true, version = "0.4", features = [
    "protocol-ftp",
    "static-curl",
    "static-ssl",
] }
curl-sys = { optional = true, version = "0.4" }
datafusion-ethers = { optional = true, version = "44" }
datafusion-functions-json = { optional = true, version = "0.44" }
rumqttc = { optional = true, version = "0.24" }
mockall = { optional = true, version = "0.13", default-features = false }
oop = { optional = true, version = "0.0.2" }
lazy_static = { version = "1" }


[target.'cfg(unix)'.dependencies]
libc = "0.2" # For getting uid:gid


[dev-dependencies]
kamu = { workspace = true, features = ["testing"] }
kamu-core = { workspace = true, features = ["testing"] }
kamu-datasets-services = { workspace = true, features = ["testing"] }
kamu-datasets-inmem = { workspace = true }
odf = { workspace = true, features = ["testing"] }
test-utils = { workspace = true }

criterion = { version = "0.5", features = ["async_tokio"] }
datafusion = { version = "44", default-features = false, features = [
    "parquet",
] }
filetime = "0.2"
fs_extra = "1.3"
indoc = "2"
mockall = { version = "0.13", default-features = false }
nanoid = "0.4.0"
pretty_assertions = { version = "1" }
test-group = { version = "1" }
test-log = { version = "0.2", features = ["trace"] }
testing_logger = { version = "0.1" }
tokio = { version = "1", default-features = false, features = ["rt", "macros"] }


[[bench]]
name = "parallel_simple_transfer_protocol"
harness = false
path = "tests/benches/parallel_simple_transfer_protocol.rs"
