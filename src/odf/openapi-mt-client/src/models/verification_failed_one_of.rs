// Copyright Kamu Data, Inc. and contributors. All rights reserved.
//
// Use of this software is governed by the Business Source License
// included in the LICENSE file.
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0.

/*
 * Kamu REST API
 *
 * You are currently running Kamu CLI in the API server mode. For a fully-featured server consider using [Kamu Node](https://docs.kamu.dev/node/).  ## Auth Some operation require an **API token**. Pass `--get-token` command line argument for CLI to generate a token for you.  ## Resources - [Documentation](https://docs.kamu.dev) - [Discord](https://discord.gg/nU6TXRQNXC) - [Other protocols](https://docs.kamu.dev/node/protocols/) - [Open Data Fabric specification](https://docs.kamu.dev/odf/)
 *
 * The version of the OpenAPI document: 0.233.0
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct VerificationFailedOneOf {
    #[serde(rename = "actual_hash")]
    pub actual_hash: String,
    #[serde(rename = "expected_hash")]
    pub expected_hash: String,
    #[serde(rename = "message")]
    pub message: String,
    #[serde(rename = "kind")]
    pub kind: Kind,
}

impl VerificationFailedOneOf {
    pub fn new(
        actual_hash: String,
        expected_hash: String,
        message: String,
        kind: Kind,
    ) -> VerificationFailedOneOf {
        VerificationFailedOneOf {
            actual_hash,
            expected_hash,
            message,
            kind,
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Kind {
    #[serde(rename = "VerificationFailed::OutputMismatch")]
    VerificationFailedColonColonOutputMismatch,
}

impl Default for Kind {
    fn default() -> Kind {
        Self::VerificationFailedColonColonOutputMismatch
    }
}
