/*
 * Kamu REST API
 *
 * You are currently running Kamu CLI in the API server mode. For a fully-featured server consider using [Kamu Node](https://docs.kamu.dev/node/).  ## Auth Some operation require an **API token**. Pass `--get-token` command line argument for CLI to generate a token for you.  ## Resources - [Documentation](https://docs.kamu.dev) - [Discord](https://discord.gg/nU6TXRQNXC) - [Other protocols](https://docs.kamu.dev/node/protocols/) - [Open Data Fabric specification](https://docs.kamu.dev/odf/) 
 *
 * The version of the OpenAPI document: 0.233.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct QueryResponse {
    /// Succinct commitment
    #[serde(rename = "commitment", skip_serializing_if = "Option::is_none")]
    pub commitment: Option<Box<models::Commitment>>,
    /// Inputs that can be used to fully reproduce the query
    #[serde(rename = "input", skip_serializing_if = "Option::is_none")]
    pub input: Option<Box<models::QueryRequest>>,
    /// Query results
    #[serde(rename = "output")]
    pub output: Box<models::Outputs>,
    /// Signature block
    #[serde(rename = "proof", skip_serializing_if = "Option::is_none")]
    pub proof: Option<Box<models::Proof>>,
    /// Information about processing performed by other nodes as part of this operation
    #[serde(rename = "subQueries", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub sub_queries: Option<Option<Vec<models::SubQuery>>>,
}

impl QueryResponse {
    pub fn new(output: models::Outputs) -> QueryResponse {
        QueryResponse {
            commitment: None,
            input: None,
            output: Box::new(output),
            proof: None,
            sub_queries: None,
        }
    }
}

