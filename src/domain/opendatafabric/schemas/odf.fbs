////////////////////////////////////////////////////////////////////////////////
// WARNING: This file is auto-generated from Open Data Fabric Schemas
// See: http://opendatafabric.org/
////////////////////////////////////////////////////////////////////////////////

struct Timestamp {
  year: int32;
  ordinal: uint16;
  seconds_from_midnight: uint32;
  nanoseconds: uint32;
}

////////////////////////////////////////////////////////////////////////////////
// OffsetInterval
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#offsetinterval-schema
////////////////////////////////////////////////////////////////////////////////

table OffsetInterval {
  start: uint64;
  end: uint64;
}

////////////////////////////////////////////////////////////////////////////////
// DataSlice
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#dataslice-schema
////////////////////////////////////////////////////////////////////////////////

table DataSlice {
  logical_hash: [ubyte];
  physical_hash: [ubyte];
  offset_interval: OffsetInterval;
  size: uint64;
}

////////////////////////////////////////////////////////////////////////////////
// Checkpoint
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#checkpoint-schema
////////////////////////////////////////////////////////////////////////////////

table Checkpoint {
  physical_hash: [ubyte];
  size: uint64;
}

////////////////////////////////////////////////////////////////////////////////
// SourceState
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#sourcestate-schema
////////////////////////////////////////////////////////////////////////////////

table SourceState {
  source_name: string;
  kind: string;
  value: string;
}

////////////////////////////////////////////////////////////////////////////////
// AddData
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#adddata-schema
////////////////////////////////////////////////////////////////////////////////

table AddData {
  prev_checkpoint: [ubyte];
  prev_offset: uint64 = null;
  new_data: DataSlice;
  new_checkpoint: Checkpoint;
  new_watermark: Timestamp;
  new_source_state: SourceState;
}

////////////////////////////////////////////////////////////////////////////////
// ReadStep
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#readstep-schema
////////////////////////////////////////////////////////////////////////////////

table ReadStepCsv {
  schema: [string];
  separator: string;
  encoding: string;
  quote: string;
  escape: string;
  header: bool = null;
  infer_schema: bool = null;
  null_value: string;
  date_format: string;
  timestamp_format: string;
}

table ReadStepGeoJson {
  schema: [string];
}

table ReadStepEsriShapefile {
  schema: [string];
  sub_path: string;
}

table ReadStepParquet {
  schema: [string];
}

table ReadStepJson {
  sub_path: string;
  schema: [string];
  date_format: string;
  encoding: string;
  timestamp_format: string;
}

table ReadStepNdJson {
  schema: [string];
  date_format: string;
  encoding: string;
  timestamp_format: string;
}

table ReadStepNdGeoJson {
  schema: [string];
}

union ReadStep {
  ReadStepCsv,
  ReadStepGeoJson,
  ReadStepEsriShapefile,
  ReadStepParquet,
  ReadStepJson,
  ReadStepNdJson,
  ReadStepNdGeoJson,
}

////////////////////////////////////////////////////////////////////////////////
// SqlQueryStep
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#sqlquerystep-schema
////////////////////////////////////////////////////////////////////////////////

table SqlQueryStep {
  alias: string;
  query: string;
}

////////////////////////////////////////////////////////////////////////////////
// TemporalTable
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#temporaltable-schema
////////////////////////////////////////////////////////////////////////////////

table TemporalTable {
  name: string;
  primary_key: [string];
}

////////////////////////////////////////////////////////////////////////////////
// Transform
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#transform-schema
////////////////////////////////////////////////////////////////////////////////

table TransformSql {
  engine: string;
  version: string;
  query: string;
  queries: [SqlQueryStep];
  temporal_tables: [TemporalTable];
}

union Transform {
  TransformSql,
}

////////////////////////////////////////////////////////////////////////////////
// MergeStrategy
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#mergestrategy-schema
////////////////////////////////////////////////////////////////////////////////

table MergeStrategyAppend {
}

table MergeStrategyLedger {
  primary_key: [string];
}

table MergeStrategySnapshot {
  primary_key: [string];
  compare_columns: [string];
  observation_column: string;
  obsv_added: string;
  obsv_changed: string;
  obsv_removed: string;
}

union MergeStrategy {
  MergeStrategyAppend,
  MergeStrategyLedger,
  MergeStrategySnapshot,
}

////////////////////////////////////////////////////////////////////////////////
// AddPushSource
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#addpushsource-schema
////////////////////////////////////////////////////////////////////////////////

table AddPushSource {
  source_name: string;
  read: ReadStep;
  preprocess: Transform;
  merge: MergeStrategy;
}

////////////////////////////////////////////////////////////////////////////////
// AttachmentEmbedded
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#attachmentembedded-schema
////////////////////////////////////////////////////////////////////////////////

table AttachmentEmbedded {
  path: string;
  content: string;
}

////////////////////////////////////////////////////////////////////////////////
// Attachments
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#attachments-schema
////////////////////////////////////////////////////////////////////////////////

table AttachmentsEmbedded {
  items: [AttachmentEmbedded];
}

union Attachments {
  AttachmentsEmbedded,
}

////////////////////////////////////////////////////////////////////////////////
// DatasetKind
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#datasetkind-schema
////////////////////////////////////////////////////////////////////////////////

enum DatasetKind: int32 {
  Root,
  Derivative,
}

////////////////////////////////////////////////////////////////////////////////
// ExecuteQueryInput
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#executequeryinput-schema
////////////////////////////////////////////////////////////////////////////////

table ExecuteQueryInput {
  dataset_id: [ubyte];
  prev_block_hash: [ubyte];
  new_block_hash: [ubyte];
  prev_offset: uint64 = null;
  new_offset: uint64 = null;
}

////////////////////////////////////////////////////////////////////////////////
// ExecuteQuery
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#executequery-schema
////////////////////////////////////////////////////////////////////////////////

table ExecuteQuery {
  query_inputs: [ExecuteQueryInput];
  prev_checkpoint: [ubyte];
  prev_offset: uint64 = null;
  new_data: DataSlice;
  new_checkpoint: Checkpoint;
  new_watermark: Timestamp;
}

////////////////////////////////////////////////////////////////////////////////
// Seed
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#seed-schema
////////////////////////////////////////////////////////////////////////////////

table Seed {
  dataset_id: [ubyte];
  dataset_kind: DatasetKind;
}

////////////////////////////////////////////////////////////////////////////////
// EventTimeSource
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#eventtimesource-schema
////////////////////////////////////////////////////////////////////////////////

table EventTimeSourceFromMetadata {
}

table EventTimeSourceFromPath {
  pattern: string;
  timestamp_format: string;
}

table EventTimeSourceFromSystemTime {
}

union EventTimeSource {
  EventTimeSourceFromMetadata,
  EventTimeSourceFromPath,
  EventTimeSourceFromSystemTime,
}

////////////////////////////////////////////////////////////////////////////////
// SourceCaching
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#sourcecaching-schema
////////////////////////////////////////////////////////////////////////////////

table SourceCachingForever {
}

union SourceCaching {
  SourceCachingForever,
}

////////////////////////////////////////////////////////////////////////////////
// RequestHeader
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#requestheader-schema
////////////////////////////////////////////////////////////////////////////////

table RequestHeader {
  name: string;
  value: string;
}

////////////////////////////////////////////////////////////////////////////////
// EnvVar
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#envvar-schema
////////////////////////////////////////////////////////////////////////////////

table EnvVar {
  name: string;
  value: string;
}

////////////////////////////////////////////////////////////////////////////////
// FetchStep
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#fetchstep-schema
////////////////////////////////////////////////////////////////////////////////

table FetchStepUrl {
  url: string;
  event_time: EventTimeSource;
  cache: SourceCaching;
  headers: [RequestHeader];
}

enum SourceOrdering: int32 {
  ByEventTime,
  ByName,
}

table FetchStepFilesGlob {
  path: string;
  event_time: EventTimeSource;
  cache: SourceCaching;
  order: SourceOrdering = null;
}

table FetchStepContainer {
  image: string;
  command: [string];
  args: [string];
  env: [EnvVar];
}

union FetchStep {
  FetchStepUrl,
  FetchStepFilesGlob,
  FetchStepContainer,
}

////////////////////////////////////////////////////////////////////////////////
// PrepStep
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#prepstep-schema
////////////////////////////////////////////////////////////////////////////////

enum CompressionFormat: int32 {
  Gzip,
  Zip,
}

table PrepStepDecompress {
  format: CompressionFormat;
  sub_path: string;
}

table PrepStepPipe {
  command: [string];
}

union PrepStep {
  PrepStepDecompress,
  PrepStepPipe,
}

////////////////////////////////////////////////////////////////////////////////
// SetPollingSource
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#setpollingsource-schema
////////////////////////////////////////////////////////////////////////////////

table PrepStepWrapper { value: PrepStep; }

table SetPollingSource {
  fetch: FetchStep;
  prepare: [PrepStepWrapper];
  read: ReadStep;
  preprocess: Transform;
  merge: MergeStrategy;
}

////////////////////////////////////////////////////////////////////////////////
// TransformInput
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#transforminput-schema
////////////////////////////////////////////////////////////////////////////////

table TransformInput {
  dataset_ref: string;
  alias: string;
}

////////////////////////////////////////////////////////////////////////////////
// SetTransform
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#settransform-schema
////////////////////////////////////////////////////////////////////////////////

table SetTransform {
  inputs: [TransformInput];
  transform: Transform;
}

////////////////////////////////////////////////////////////////////////////////
// SetVocab
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#setvocab-schema
////////////////////////////////////////////////////////////////////////////////

table SetVocab {
  system_time_column: string;
  event_time_column: string;
  offset_column: string;
}

////////////////////////////////////////////////////////////////////////////////
// SetWatermark
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#setwatermark-schema
////////////////////////////////////////////////////////////////////////////////

table SetWatermark {
  output_watermark: Timestamp;
}

////////////////////////////////////////////////////////////////////////////////
// SetAttachments
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#setattachments-schema
////////////////////////////////////////////////////////////////////////////////

table SetAttachments {
  attachments: Attachments;
}

////////////////////////////////////////////////////////////////////////////////
// SetInfo
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#setinfo-schema
////////////////////////////////////////////////////////////////////////////////

table SetInfo {
  description: string;
  keywords: [string];
}

////////////////////////////////////////////////////////////////////////////////
// SetLicense
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#setlicense-schema
////////////////////////////////////////////////////////////////////////////////

table SetLicense {
  short_name: string;
  name: string;
  spdx_id: string;
  website_url: string;
}

////////////////////////////////////////////////////////////////////////////////
// SetDataSchema
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#setdataschema-schema
////////////////////////////////////////////////////////////////////////////////

table SetDataSchema {
  schema: [ubyte];
}

////////////////////////////////////////////////////////////////////////////////
// DisablePushSource
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#disablepushsource-schema
////////////////////////////////////////////////////////////////////////////////

table DisablePushSource {
  source_name: string;
}

////////////////////////////////////////////////////////////////////////////////
// DisablePollingSource
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#disablepollingsource-schema
////////////////////////////////////////////////////////////////////////////////

table DisablePollingSource {
}

////////////////////////////////////////////////////////////////////////////////
// MetadataEvent
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#metadataevent-schema
////////////////////////////////////////////////////////////////////////////////

union MetadataEvent {
  AddData,
  ExecuteQuery,
  Seed,
  SetPollingSource,
  SetTransform,
  SetVocab,
  SetWatermark,
  SetAttachments,
  SetInfo,
  SetLicense,
  SetDataSchema,
  AddPushSource,
  DisablePushSource,
  DisablePollingSource,
}

////////////////////////////////////////////////////////////////////////////////
// DatasetVocabulary
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#datasetvocabulary-schema
////////////////////////////////////////////////////////////////////////////////

table DatasetVocabulary {
  system_time_column: string;
  event_time_column: string;
  offset_column: string;
}

////////////////////////////////////////////////////////////////////////////////
// Watermark
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#watermark-schema
////////////////////////////////////////////////////////////////////////////////

table Watermark {
  system_time: Timestamp;
  event_time: Timestamp;
}

////////////////////////////////////////////////////////////////////////////////
// ExecuteQueryRequestInput
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#executequeryrequestinput-schema
////////////////////////////////////////////////////////////////////////////////

table ExecuteQueryRequestInput {
  dataset_id: [ubyte];
  dataset_alias: string;
  query_alias: string;
  vocab: DatasetVocabulary;
  offset_interval: OffsetInterval;
  data_paths: [string];
  schema_file: string;
  explicit_watermarks: [Watermark];
}

////////////////////////////////////////////////////////////////////////////////
// ExecuteQueryRequest
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#executequeryrequest-schema
////////////////////////////////////////////////////////////////////////////////

table ExecuteQueryRequest {
  dataset_id: [ubyte];
  dataset_alias: string;
  system_time: Timestamp;
  vocab: DatasetVocabulary;
  transform: Transform;
  query_inputs: [ExecuteQueryRequestInput];
  next_offset: uint64;
  prev_checkpoint_path: string;
  new_checkpoint_path: string;
  new_data_path: string;
}

////////////////////////////////////////////////////////////////////////////////
// ExecuteQueryResponse
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#executequeryresponse-schema
////////////////////////////////////////////////////////////////////////////////

table ExecuteQueryResponseProgress {
}

table ExecuteQueryResponseSuccess {
  offset_interval: OffsetInterval;
  new_watermark: Timestamp;
}

table ExecuteQueryResponseInvalidQuery {
  message: string;
}

table ExecuteQueryResponseInternalError {
  message: string;
  backtrace: string;
}

union ExecuteQueryResponse {
  ExecuteQueryResponseProgress,
  ExecuteQueryResponseSuccess,
  ExecuteQueryResponseInvalidQuery,
  ExecuteQueryResponseInternalError,
}

table ExecuteQueryResponseRoot {
  value: ExecuteQueryResponse;
}

////////////////////////////////////////////////////////////////////////////////
// Manifest
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#manifest-schema
////////////////////////////////////////////////////////////////////////////////

table Manifest {
  kind: int64;
  version: int32;
  content: [ubyte];
}

////////////////////////////////////////////////////////////////////////////////
// MetadataBlock
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#metadatablock-schema
////////////////////////////////////////////////////////////////////////////////

table MetadataBlock {
  system_time: Timestamp;
  prev_block_hash: [ubyte];
  sequence_number: uint64;
  event: MetadataEvent;
}

