[package]
name = "kamu-cli"
description = "Decentralized data management tool"
categories = ["command-line-utilities"]
# Run `kamu-cli` just with `cargo run`
default-run = "kamu-cli"
version = { workspace = true }
homepage = { workspace = true }
repository = { workspace = true }
authors = { workspace = true }
readme = { workspace = true }
license-file = { workspace = true }
keywords = { workspace = true }
include = { workspace = true }
edition = { workspace = true }
publish = { workspace = true }

# Disabling examples discovery as we need them very rarely, but they significantly slow down build times
autoexamples = false
build = "build.rs"


[lints]
workspace = true


[lib]
doctest = false


[features]
default = ["kamu/ingest-evm", "kamu/ingest-mqtt", "kamu/query-extensions-json"]

web-ui = ["rust-embed"]
ingest-evm = ["kamu/ingest-evm"]
ingest-ftp = ["kamu/ingest-ftp"]
ingest-mqtt = ["kamu/ingest-mqtt"]
query-extensions-json = ["kamu/query-extensions-json"]


[dependencies]
# Kamu
container-runtime = { workspace = true }
database-common = { workspace = true }
database-common-macros = { workspace = true }
http-common = { workspace = true }
internal-error = { workspace = true }
time-source = { workspace = true }

kamu = { workspace = true }
kamu-data-utils = { workspace = true }

kamu-adapter-auth-oso = { workspace = true }
kamu-adapter-flight-sql = { workspace = true }
kamu-adapter-graphql = { workspace = true }
kamu-adapter-http = { workspace = true }
kamu-adapter-oauth = { workspace = true }
kamu-adapter-odata = { workspace = true }
kamu-datafusion-cli = { workspace = true }
opendatafabric = { workspace = true }
random-names = { workspace = true }

kamu-flow-system-services = { workspace = true }
kamu-flow-system-inmem = { workspace = true }
kamu-flow-system-postgres = { workspace = true }
kamu-flow-system-sqlite = { workspace = true }

kamu-task-system-services = { workspace = true }
kamu-task-system-inmem = { workspace = true }
kamu-task-system-postgres = { workspace = true }
kamu-task-system-sqlite = { workspace = true }

kamu-accounts = { workspace = true }
kamu-accounts-services = { workspace = true }
kamu-accounts-inmem = { workspace = true }
kamu-accounts-postgres = { workspace = true }
kamu-accounts-mysql = { workspace = true }
kamu-accounts-sqlite = { workspace = true }

kamu-datasets-services = { workspace = true }
kamu-datasets = { workspace = true }
kamu-datasets-inmem = { workspace = true }
kamu-datasets-postgres = { workspace = true }
kamu-datasets-sqlite = { workspace = true }

messaging-outbox = { workspace = true }
kamu-messaging-outbox-inmem = { workspace = true }
kamu-messaging-outbox-postgres = { workspace = true }
kamu-messaging-outbox-sqlite = { workspace = true }

kamu-auth-rebac-inmem = { workspace = true }
kamu-auth-rebac-services = { workspace = true }
kamu-auth-rebac-sqlite = { workspace = true }

# CLI
chrono-humanize = "0.2"                                           # Human readable durations
clap = "4"
clap_complete = "4"
console = "0.15"                                                  # Terminal colors
ctrlc = "3"                                                       # Ctrl+C handler
humansize = "2"                                                   # Human readable data sizes
indicatif = "0.17"                                                # Progress bars and spinners
minus = { version = "5", features = ["static_output", "search"] }
num-format = "0.4"                                                # Human-readable number formatting
prettytable-rs = "0.10"                                           # ASCII table formatting
read_input = "0.8"                                                # Basic user input
webbrowser = "0.8"                                                # For opening URLs in default system browser

# APIs
arrow-flight = { version = "52", features = ["flight-sql-experimental"] }
async-graphql = { version = "6", features = [
    "chrono",
    "url",
    "apollo_tracing",
] }
async-graphql-axum = "6"
axum = { version = "0.6", features = ["ws"] }
axum-extra = { version = "0.8", features = ["async-read-body"] }
http = "0.2"
hyper = "0.14"
reqwest = { version = "0.11", default-features = false, features = [] }
serde_json = "1"
tonic = { version = "0.11", default-features = false }
tower = "0.4"
tower-http = { version = "0.4", features = ["trace", "cors"] }

# Web UI
rust-embed = { optional = true, version = "8", features = [
    "interpolate-folder-path",
    "compression",
] }
mime = "0.3"
mime_guess = "2"

# Config
duration-string = { version = "0.3", features = ["serde"] }
merge = "0.1"
serde = { version = "1", features = ["derive"] }
serde_with = "3"
serde_yaml = "0.9"

# Tracing / logging / telemetry
tracing = "0.1"
tracing-appender = "0.2"
tracing-perfetto = { workspace = true }
tracing-subscriber = { version = "0.3", default-features = false, features = [
    "std",
    "fmt",
    "ansi",
    "env-filter",
] }
tracing-log = "0.2"
tracing-bunyan-formatter = "0.3"

# Utils
async-trait = "0.1"
chrono = "0.4"
cfg-if = "1" # Conditional compilation
datafusion = { version = "41", default-features = false, features = [
    "crypto_expressions",
    "encoding_expressions",
    "parquet",
    "regex_expressions",
    "unicode_expressions",
    "compression",
] }
dill = "0.9"
dirs = "5"
fs_extra = "1.3"
futures = "0.3"
glob = "0.3" # Used for path completions
hex = { version = "0.4", default-features = false, features = [] }
indoc = "2"
itertools = "0.13"
libc = "0.2" # Signal names
regex = "1"
secrecy = "0.8"
shlex = "1" # Parsing partial input for custom completions
signal-hook = "0.3" # Signal handling
tokio = { version = "1", default-features = false, features = ["io-util"] }
tokio-stream = { version = "0.1", default-features = false, features = ["net"] }
tokio-util = { version = "0.7", default-features = false, features = ["io"] }
tempfile = "3"
thiserror = { version = "1", default-features = false }
url = "2"
urlencoding = "2"
whoami = "1.5"


[target.'cfg(unix)'.dependencies]
libc = "0.2" # For getting uid:gid


[dev-dependencies]
kamu-cli-puppet = { workspace = true, default-features = false, features = [
    "extensions",
] }

pretty_assertions = { version = "1" }
test-log = { version = "0.2", features = ["trace"] }


[build-dependencies]
vergen = { version = "8", features = [
    "build",
    "cargo",
    "git",
    "gitcl",
    "rustc",
] }
